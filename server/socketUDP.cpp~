#include socketUDP.cpp

SocketUDP::SocketUDP() : Sockets(), thread_( &SocketUDP::workServer, this){}
SocketUDP::SocketUDP(int domain, int type, int protocol, unsigned short int port) : Sockets(domain, type, protocol, port, "0"), thread_( &SocketUDP::workServer, this){}

void SocketUDP::start(){
	thread_.join();
}

int SocketUDP::dataReceive(){
	char buffer[1024] = "";
	socklen_t fromlen = sizeof(*getSAddr()); 

	int recsize = recvfrom(getSockFD(), (void *)buffer, sizeof(buffer), 0, (struct sockaddr *) getSAddr(), &fromlen);
    	if (recsize < 0) {
    		fprintf(stderr, "%s\n", strerror(errno));
      		exit(EXIT_FAILURE);
    	}
    	cout << "recsize: " << recsize << endl;
    	sleep(1);
    	cout << "datagram: " << buffer << endl;

	return 0;
}

void SocketUDP::workServer(){
	createSocket();
	bindSocket();
	cout << "UDP listen..." << endl;
	while(1){
		dataReceive();
	}
}
